{"version":3,"sources":["reportWebVitals.js","components/ForecastCard.js","components/ForecastCircle.js","lib/helpers.js","components/ForecastComponent.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ForecastCard","value","className","size","ForecastCircle","height","width","stroke","strokeWidth","fill","r","cx","cy","circumFerence","radius","ForecastComponent","useState","percent","setPercent","useForm","register","handleSubmit","errors","useEffect","circle","document","querySelector","circleInner","baseVal","radiusInner","style","strokeDashoffset","onSubmit","data","Number","name","placeholder","ref","required","maxLength","type","ReactDOM","render","StrictMode","getElementById"],"mappings":"0KAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,4BCyBCQ,EA5BM,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACrB,OACE,qCACE,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,sBAAMC,KAAK,KAAX,SAAkBF,IAClB,sBAAME,KAAK,IAAX,kBAEF,sBAAKD,UAAU,aAAf,UACE,mBAAGA,UAAU,mBAAb,gCACA,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,uBAAf,sBACA,qBAAKA,UAAU,wBAAf,6BAGJ,sBAAKA,UAAU,aAAf,UACE,mBAAGA,UAAU,mBAAb,wDACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,uBAAf,sBACA,qBAAKA,UAAU,wBAAf,gCAIR,sBAAKA,UAAU,wBAAf,UAAwCD,EAAQ,EAAhD,WCiCSG,EArDQ,WACrB,OACE,sBACIF,UAAU,gBACVG,OAAO,MACPC,MAAM,MAHV,UAKI,wBACEJ,UAAU,6BACVK,OAAO,2BACPC,YAAY,IACZC,KAAK,cACLC,EAfO,MAgBPC,GAAG,MACHC,GAAG,QAEL,wBACEV,UAAU,wBACVK,OAAO,OACPC,YAAY,IACZC,KAAK,cACLC,EAxBO,MAyBPC,GAAG,MACHC,GAAG,QAEL,sBACEV,UAAU,gBACVG,OAAO,MACPC,MAAM,MAHR,UAKE,wBACEJ,UAAU,6BACVK,OAAO,2BACPC,YAAY,KACZC,KAAK,cACLC,EArCW,KAsCXC,GAAG,MACHC,GAAG,QAEL,wBACEV,UAAU,+BACVK,OAAO,2BACPC,YAAY,KACZC,KAAK,cACLC,EA9CW,KA+CXC,GAAG,MACHC,GAAG,eCrDFC,EAAgB,SAACC,GAC5B,OAAO,KAAOA,GCyCDC,EAjCW,WAAO,IAAD,EACAC,mBAAS,IADT,mBACvBC,EADuB,KACdC,EADc,OAEaC,cAAnCC,EAFsB,EAEtBA,SAAUC,EAFY,EAEZA,aAAcC,EAFF,EAEEA,OAehC,OATAC,qBAAU,WACR,IAAMC,EAASC,SAASC,cAAc,0BAChCC,EAAcF,SAASC,cAAc,iCACrCZ,EAASU,EAAOd,EAAEkB,QAAQ3B,MAC1B4B,EAAcF,EAAYjB,EAAEkB,QAAQ3B,MAC1CuB,EAAOM,MAAMC,iBAAb,UAAmClB,EAAcC,GAAUD,EAAcC,GAAQ,IAAIG,GACrFU,EAAYG,MAAMC,iBAAlB,UAAwClB,EAAcgB,GAAehB,EAAcgB,GAAa,IAAIZ,KACnG,CAACA,IAGF,qCACE,sBAAKf,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAcD,MAAOgB,OAEvB,uBAAMe,SAAUX,GAnBH,SAACY,GAChBf,EAAWgB,OAAOD,EAAKhB,aAkBrB,UACE,yCACA,uBAAOkB,KAAK,UAAUC,YAAY,gBAAgBC,IAAKjB,EAAS,CAAEkB,UAAU,EAAMC,UAAW,MAC5FjB,EAAOL,SAAW,uDACnB,uBAAOuB,KAAK,kBC9BpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BrD,K","file":"static/js/main.e4afccff.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport './style.scss';\n\nconst ForecastCard = ({value}) => {\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card__progress-bar-value\"> \n          <font size=\"48\">{ value }</font>\n          <font size=\"4\">%</font>\n        </div>\n        <div className=\"card__item\">\n          <p className=\"card__item-title\">НИТ</p>\n          <div className=\"card__item-body\">\n            <div className=\"card__item-body_left\">{`234 840 `}</div>\n            <div className=\"card__item-body_right\">{`/ 256 051`}</div>\n          </div>\n        </div>\n        <div className=\"card__item\">\n          <p className=\"card__item-title\">ПРОГНОЗ</p>\n            <div className=\"card__item-body\">\n              <div className=\"card__item-body_left\">{`272 289 `}</div>\n              <div className=\"card__item-body_right\">{`/ 283 500`}</div>\n            </div>\n        </div>\n      </div>\n      <div className=\"progress-next-percent\">{value + 1}%</div>\n    </>\n  );\n};\n\nexport default ForecastCard;","import React from 'react';\n\nimport './style.scss';\n\nconst R_CIRCLE = \"116\";\nconst R_INNER_CIRCLE = \"84\";\n\nconst ForecastCircle = () => {\n  return (\n    <svg\n        className=\"progress-ring\"\n        height=\"240\"\n        width=\"240\"\n      >\n        <circle\n          className=\"progress-ring__circle-grey\"\n          stroke=\"rgba(180, 184, 183, 0.5)\"\n          strokeWidth=\"4\"\n          fill=\"transparent\"\n          r={R_CIRCLE}\n          cx=\"120\"\n          cy=\"120\"\n        />\n        <circle\n          className=\"progress-ring__circle\"\n          stroke=\"grey\"\n          strokeWidth=\"4\"\n          fill=\"transparent\"\n          r={R_CIRCLE}\n          cx=\"120\"\n          cy=\"120\"\n        />\n        <svg\n          className=\"progress-ring\"\n          height=\"240\"\n          width=\"240\"\n        >\n          <circle\n            className=\"progress-ring__circle-grey\"\n            stroke=\"rgba(180, 184, 183, 0.5)\"\n            strokeWidth=\"36\"\n            fill=\"transparent\"\n            r={R_INNER_CIRCLE}\n            cx=\"120\"\n            cy=\"120\"\n          />\n          <circle\n            className=\"progress-ring__circle-orange\"\n            stroke=\"rgba(245, 112, 51, 0.89)\"\n            strokeWidth=\"36\"\n            fill=\"transparent\"\n            r={R_INNER_CIRCLE}\n            cx=\"120\"\n            cy=\"120\"\n          />   \n        </svg>    \n      </svg>\n  );\n};\n\nexport default ForecastCircle;","export const circumFerence = (radius) => {\n  return 2*3.14*radius\n};","import React,{ useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport ForecastCard from './ForecastCard';\nimport ForecastCircle from './ForecastCircle';\nimport { circumFerence } from '../lib/helpers';\n\nimport './style.scss';\n\nconst ForecastComponent = () => {\n  const [percent, setPercent] = useState(95);\n  const { register, handleSubmit, errors } = useForm();\n  \n  const onSubmit = (data) => {\n    setPercent(Number(data.percent));\n  };\n\n  useEffect(() => {\n    const circle = document.querySelector('.progress-ring__circle');\n    const circleInner = document.querySelector('.progress-ring__circle-orange');\n    const radius = circle.r.baseVal.value;\n    const radiusInner = circleInner.r.baseVal.value;\n    circle.style.strokeDashoffset = `${circumFerence(radius) - circumFerence(radius)/100*percent}`;\n    circleInner.style.strokeDashoffset = `${circumFerence(radiusInner) - circumFerence(radiusInner)/100*percent}`;\n  }, [percent]);\n  \n  return (\n    <>\n      <div className=\"container\">\n        <ForecastCircle /> \n        <ForecastCard value={percent} />\n      </div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <p>Percent:</p>\n        <input name=\"percent\" placeholder=\"Enter persent\" ref={register({ required: true, maxLength: 3 })}/>\n        {errors.percent && <span>Enter Percent 1-100</span>} \n        <input type=\"submit\" />\n      </form>\n    </>\n  );\n}\n\nexport default ForecastComponent;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport ForecastComponent from './components/ForecastComponent';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ForecastComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}